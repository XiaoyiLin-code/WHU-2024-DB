# 在全部测试完之后把faculty表改名为faculty
#############################Test 1 Begin <passed> #############################
#   create, insert, select, union, group by(avg, sum)
CREATE CLASS faculty (name char,age int, salary int);
INSERT INTO faculty VALUES (aa,20,1000);
INSERT INTO faculty VALUES (bb,30,8000);
INSERT INTO faculty VALUES (cc,30,8000);
INSERT INTO faculty VALUES ("dd",20,1000);
INSERT INTO faculty VALUES ("ee",20,1000);
INSERT INTO faculty VALUES ("ff",30,1000);
SELECT name from faculty UNION SELECT name from faculty;
SELECT name, AVG(salary) as b from faculty group by name;
select name, sum(salary) as b from faculty group by name;
#############################Test 1 End#########################################

#############################Test 2 Begin <passed> #############################
#   where(=), update, delete, drop
create CLASS test (name char,age int, salary int);
INSERT INTO test VALUES (aa,20,1000);
INSERT INTO test VALUES (bb,30,8000);
INSERT INTO test VALUES ("cc",30,8000);
INSERT INTO test VALUES ("dd",20,1000);
INSERT INTO test VALUES ("ee",20,1000);
INSERT INTO test VALUES ("ff",30,1000);

INSERT INTO faculty VALUES (aa,20,1000);
select * from faculty where name = 'aa';
select * from faculty;
UPDATE faculty SET name = 'aaa' WHERE name = 'aa';
select * from faculty;
DELETE FROM faculty WHERE name='aaa';
select * from faculty;
drop class test;
drop class faculty;
#############################Test 2 End#########################################

#############################Test 3 Begin <?> #############################
# tjoindeputyclass(测试内容不完善)
CREATE CLASS mobile_phone_traj (trajectory_id int,user_id int, trajectory char);
INSERT INTO mobile_phone_traj VALUES (2,2,0-1);
INSERT INTO mobile_phone_traj VALUES (1,2,0-1-1-2-2-3);
INSERT INTO mobile_phone_traj VALUES (1,2,0-1-1-2-2-3-3-4-4-5);
INSERT INTO mobile_phone_traj VALUES (1,2,0-1-2-2-2-3);
select * from mobile_phone_traj;

CREATE CLASS watch_traj (trajectory_id int,user_id int, trajectory char);
INSERT INTO watch_traj VALUES (1,2,3-4-5);
INSERT INTO watch_traj VALUES (1,2,0-1-1-2-2-3-3-4-4-5);
select * from watch_traj;

create tjoindeputyclass tjoin1 as select * from mobile_phone_traj intersect select * from watch_traj;
create tjoindeputyclass tjoin2 as select * from mobile_phone_traj union select * from watch_traj;
select * from tjoin1;
select * from tjoin2;
drop class mobile_phone_traj;
drop class watch_traj;
drop class tjoin1;
drop class tjoin2;
#############################Test 3 End#########################################

#############################Test 4 Begin <?> #############################
# selectdeputy(测试内容不完善)
create selectdeputy deputy as select name as n, age as a, salary as s from faculty, test;
create selectdeputy deputy as select * from faculty limit 1;
create selectdeputy deputy as select name as n, age as a, salary as s from faculty;
CREATE SELECTDEPUTY nands SELECT name AS n,salary+10 AS s FROM faculty WHERE salary=1000;
INSERT INTO faculty VALUES ("gg",20,3000);
DELETE FROM faculty WHERE name="aa";
UPDATE faculty SET salary=8000 WHERE name="gg";
SELECT n1 AS names,birth AS births,s1 AS salarys FROM nandb WHERE n1="gg";

#############################Test 4 End#########################################

#############################Test 5 Begin <?> #############################
# semi join(测试内容不完善)
select name,test.age from faculty left join test on faculty.name=test.name;
select faculty.name,test.name from faculty right join test on faculty.name=test.name;
#############################Test 5 End#########################################

#############################Test 6 Begin <?> ##################################
#uniondeputy(测试内容不完善)
createImpl uniondeputy uniondeputyclass as select .. from .. where.. union select .. from.. where..
#############################Test 6 End#########################################

#############################Test 7 Begin <?> ##################################
# where(复杂类型)
select 1 from table where a="aa" and b=10 or c=11 and name in (10,11);
select name from faculty where age=20 and salary=1000;
select * from faculty where c in ('aa','bb');
select name from faculty where name in (select name from faculty);
#############################Test 7 End#########################################

#############################Test 8 Begin <?> ##################################
# select (a+b)类型
select age+salary as a from faculty;
################################################################################

#############################Test 9 Begin <?> ##################################
# where(还有> 复杂从句的类型)
select * from table where a=1 and b>2 and c in ('aa','bb');
select name from faculty as c where c.age*c.age+c.age=420 and salary=1000
and (age+c.age)/c.age=2 and c.salary-c.age=980 and c.salary%c.age=0;

select name from faculty as c where c.age*c.age+c.age=420 and salary=1000;
##############################################################################

#############################Test 10 Begin <?> ##################################
# union
INSERT INTO UNIONTEST VALUES ("aa",20,1000);
INSERT INTO UNIONTEST VALUES ("bb",30,8000);
INSERT INTO UNIONTEST VALUES ("cc",30,8000);

SELECT * FROM UNIONTEST UNION ALL SELECT * FROM faculty;

SELECT name AS faculty from faculty where age = 20 UNION SELECT name AS n2 from faculty where age = 30;
############################Test 10 End#########################################


